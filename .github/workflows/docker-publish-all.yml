name: Publish All Images

########################################################
#
# Builds all qBittorrent images
#
########################################################

on:
  schedule:
    - cron: "36 6 */7 * *"
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REGISTRY_USER: rmartin16

jobs:

  libtorrent-versions:
    uses: ./.github/workflows/libtorrent-latest-versions.yml

  build-base:
    runs-on: ubuntu-latest
    needs: libtorrent-versions
    permissions:
      contents: read
      packages: write
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        include:
          - LIBTORRENT_VERSION: ${{ needs.libtorrent-versions.outputs.libtorrent-v2-version }}
            LIBTORRENT_TAG: v2
          - LIBTORRENT_VERSION: ${{ needs.libtorrent-versions.outputs.libtorrent-v1-version }}
            LIBTORRENT_TAG: v1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REGISTRY_USER }}/qbittorrent-base
          flavor: latest=false
          labels: |
            maintainer=${{ github.repository_owner }}
            org.opencontainers.image.title=qbittorrent v4.3.0 libtorrent ${{ matrix.LIBTORRENT_VERSION }} builder
            org.opencontainers.image.description=Base to build qBittorrent 4.3.0+ using libtorrent ${{ matrix.LIBTORRENT_VERSION }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          tags: |
            type=raw,value=libtorrent-${{ matrix.LIBTORRENT_TAG }}
            type=raw,value=latest,enable=${{ matrix.LIBTORRENT_TAG == 'v2' }}

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          file: All.Dockerfile
          target: qbittorrent-base
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha,scope=${{ matrix.LIBTORRENT_TAG }}
          cache-to: type=gha,mode=max,scope=${{ matrix.LIBTORRENT_TAG }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: LIBTORRENT_VERSION=${{ matrix.LIBTORRENT_VERSION }}

  build-legacy-base:
    runs-on: ubuntu-latest
    needs: libtorrent-versions
    permissions:
      contents: read
      packages: write
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        include:
          - LIBTORRENT_VERSION: 1_1_14
            LIBTORRENT_TAG: 1_1_14
          - LIBTORRENT_VERSION: ${{ needs.libtorrent-versions.outputs.libtorrent-v1-version }}
            LIBTORRENT_TAG: v1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REGISTRY_USER }}/qbittorrent-base
          flavor: latest=false
          labels: |
            maintainer=${{ github.repository_owner }}
            org.opencontainers.image.title=qbittorrent v4.3.0 libtorrent ${{ matrix.LIBTORRENT_VERSION }} builder
            org.opencontainers.image.description=Base to build qBittorrent 4.3.0+ using libtorrent ${{ matrix.LIBTORRENT_VERSION }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          tags: |
            type=raw,value=legacy-libtorrent-${{ matrix.LIBTORRENT_TAG }}

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          file: All.Legacy.Dockerfile
          target: qbittorrent-base
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha,scope=${{ matrix.LIBTORRENT_TAG }}-legacy
          cache-to: type=gha,mode=max,scope=${{ matrix.LIBTORRENT_TAG }}-legacy
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: LIBTORRENT_VERSION=${{ matrix.LIBTORRENT_VERSION }}

  build-qbittorrent-dev:
    needs: build-base
    uses: ./.github/workflows/docker-publish-dev.yml

  build-qbittorrent-release:
    needs: build-base
    uses: ./.github/workflows/docker-publish-release.yml

  build-qbittorrent-legacy:
    needs: build-legacy-base
    uses: ./.github/workflows/docker-publish-legacy.yml
