name: Publish Legacy Images

########################################################
#
# Builds qBittorrent v4.1.0 thru v4.2.5
#
########################################################

on:
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: rmartin16/qbittorrent-nox

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        QBITTORRENT_VER: [ "4.1.0","4.1.1","4.1.2","4.1.3","4.1.4","4.1.5","4.1.6","4.1.7","4.1.8","4.1.9","4.1.9.1","4.2.0","4.2.1","4.2.2","4.2.3","4.2.4","4.2.5" ]
        QBITTORRENT_BUILD_TYPE: [ "release", "debug" ]
        include:
          - LIBTORRENT_TAG: "1_1_14"
          - QBITTORRENT_VER: "4.2.0"
            LIBTORRENT_TAG: "v1"
          - QBITTORRENT_VER: "4.2.1"
            LIBTORRENT_TAG: "v1"
          - QBITTORRENT_VER: "4.2.2"
            LIBTORRENT_TAG: "v1"
          - QBITTORRENT_VER: "4.2.3"
            LIBTORRENT_TAG: "v1"
          - QBITTORRENT_VER: "4.2.4"
            LIBTORRENT_TAG: "v1"
          - QBITTORRENT_VER: "4.2.5"
            LIBTORRENT_TAG: "v1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker

      - name: Download base image artifact
        continue-on-error: true
        uses: actions/download-artifact@v3
        with:
          name: base-image-legacy-libtorrent-${{ matrix.LIBTORRENT_TAG }}
          path: /tmp

      - name: Load base image
        run: |
          if [ -f "/tmp/base-image.tar" ]; then
            docker load --input /tmp/base-image.tar
            docker image ls -a
          fi

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          labels: |
            maintainer=${{ github.repository_owner }}
            org.opencontainers.image.title=qbittorrent-nox
            org.opencontainers.image.description=Headless qBittorrent v${{ matrix.QBITTORRENT_VER }} with libtorrent ${{ matrix.LIBTORRENT_TAG }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          tags: |
            # v4.2.5 - specific qBittorrent with latest v1 libtorrent
            type=raw,value=v${{ matrix.QBITTORRENT_VER }},enable=${{ matrix.QBITTORRENT_BUILD_TYPE == 'release' }}
            # v4.2.5-v1 - specific qBittorrent with specific libtorrent version
            type=raw,value=v${{ matrix.QBITTORRENT_VER }}-v1,enable=${{ matrix.QBITTORRENT_BUILD_TYPE == 'release' }}
            # v4.2.5-debug - specific debug qBittorrent with latest v1 libtorrent
            type=raw,value=v${{ matrix.QBITTORRENT_VER }}-debug,enable=${{ matrix.QBITTORRENT_BUILD_TYPE == 'debug' }}
            # v4.2.5-v1-debug - specific debug qBittorrent with specific libtorrent version
            type=raw,value=v${{ matrix.QBITTORRENT_VER }}-v1-debug,enable=${{ matrix.QBITTORRENT_BUILD_TYPE == 'debug' }}

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          file: qBittorrent.Legacy.Dockerfile
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            LIBTORRENT_TAG=${{ matrix.LIBTORRENT_TAG }}
            QBT_VERSION=${{ matrix.QBITTORRENT_VER }}
            QBT_BUILD_TYPE=${{ matrix.QBITTORRENT_BUILD_TYPE }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Verify image
        run: |
          DOCKER_TAG=v${{ matrix.QBITTORRENT_VER }}-v1
          if [[ "${{ matrix.QBITTORRENT_BUILD_TYPE }}" = "debug" ]]; then DOCKER_TAG="${DOCKER_TAG}-debug"; fi
          docker run --rm -d --name qbt -p8080:8080 ${REGISTRY}/${IMAGE_NAME}:${DOCKER_TAG}
          python -m pip install qbittorrent-api
          docker logs qbt
          python -c 'from qbittorrentapi import Client; client=Client("localhost",8080,"admin","adminadmin"); print(f"{client.app.version=}"); assert client.app.version=="v${{ matrix.QBITTORRENT_VER }}"'

      - name: Publish image to ghcr.io
        if: github.event_name != 'pull_request'
        run: docker push --all-tags ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
