name: Publish Dev Images

on:
  schedule:
    - cron: "36 */6 * * *"
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: rmartin16/qbittorrent-nox
  CACHE_VER: "1"

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        QBITTORRENT_VER: [ "master", "v4_4_x", "v4_3_x" ]
        QBITTORRENT_BUILD_TYPE: [ "release", "debug" ]
        LIBTORRENT_VER: [ "2.0.7" ]
        BOOST_VERSION: [ "1_80_0" ]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache sources
        id: cache-sources
        uses: actions/cache@v3
        with:
          path: ./downloads
          key: sources-${{ env.CACHE_VER }}-${{ matrix.BOOST_VERSION }}

      - name: Download sources
        if: steps.cache-sources.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./downloads
          curl -NLk \
            "https://boostorg.jfrog.io/artifactory/main/release/$(echo ${{ matrix.BOOST_VERSION }} | sed 's/_/\./g')/source/boost_${{ matrix.BOOST_VERSION }}.tar.gz" \
            -o "./downloads/boost_${{ matrix.BOOST_VERSION }}.tar.gz"

      - name: Determine Qt Version
        id: qt
        run: |
          echo ::set-output name=version::"qt6"
          if [[ ${{ matrix.QBITTORRENT_VER }} = v4_3* ]]; then echo ::set-output name=version::"qt5"; fi

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{ matrix.QBITTORRENT_VER }}-${{ matrix.LIBTORRENT_VER }},enable=${{ matrix.QBITTORRENT_BUILD_TYPE == 'release' }}
            type=raw,value=v${{ matrix.QBITTORRENT_VER }}-${{ matrix.LIBTORRENT_VER }}-debug,enable=${{ matrix.QBITTORRENT_BUILD_TYPE == 'debug' }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BOOST_VERSION=${{ matrix.BOOST_VERSION }}
            LIBTORRENT_VERSION=${{ matrix.LIBTORRENT_VER }}
            QBT_VERSION=${{ matrix.QBITTORRENT_VER }}
            QBT_BUILD_TYPE=${{ matrix.QBITTORRENT_BUILD_TYPE }}
            QT_VERSION=${{ steps.qt.outputs.version }}
            CACHEBUST=${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}

      - name: Send mail
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ github.job }} job of ${{ github.repository }} failed
          body: |
            ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} failed.
            https://github.com/rmartin16/qbittorrent-api/actions/runs/${{ github.run_id }}
          to: rmartin16+github-action@gmail.com   # comma-separated string
          from: rmartin16+github-action@gmail.com
