########################################################
#
# Builds qBittorrent v4.1.0 thru v4.2.5
#
########################################################
FROM ubuntu:22.10 AS builder

ENV BASEPATH="/build"

WORKDIR ${BASEPATH}
COPY ./patches/* ./patches/

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && \
    apt install --no-install-recommends -y \
      automake \
      build-essential \
      ca-certificates \
      cmake \
      curl \
      git \
      libssl-dev \
      libgeoip-dev \
      libtool \
      libboost-dev \
      libboost-system-dev \
      libboost-chrono-dev \
      libboost-random-dev \
      ninja-build \
      pkg-config \
      qtbase5-dev \
      qttools5-dev \
      libqt5svg5-dev \
      zlib1g-dev

WORKDIR "${BASEPATH}"
ARG LIBTORRENT_VERSION
RUN if [ "${LIBTORRENT_VERSION}" = "1_1_14" ]; then \
      LIBTORRENT_BRANCH="libtorrent-${LIBTORRENT_VERSION}" ; \
    else \
      LIBTORRENT_BRANCH="v${LIBTORRENT_VERSION}" ; \
    fi && \
    mkdir -p "${BASEPATH}/libtorrent/src" && mkdir -p "${BASEPATH}/libtorrent/install" && \
    cd "${BASEPATH}/libtorrent/src" && \
    git clone --shallow-submodules --recurse-submodules https://github.com/arvidn/libtorrent.git --branch ${LIBTORRENT_BRANCH}
WORKDIR "${BASEPATH}/libtorrent/src/libtorrent"
RUN cmake -Wno-dev -B cmake-build-dir/Release \
      -D CMAKE_BUILD_TYPE=Release \
      -D CMAKE_INSTALL_PREFIX="${BASEPATH}/libtorrent/install" && \
    cmake --build cmake-build-dir/Release --parallel $(nproc) && \
    cmake --install cmake-build-dir/Release

WORKDIR "${BASEPATH}"
ARG CACHEBUST=1
ARG QBT_VERSION
RUN echo ${CACHEBUST} && \
    QBT_URL="https://github.com/qbittorrent/qBittorrent/archive/refs/tags/release-${QBT_VERSION}.tar.gz" && \
    curl -sNLk ${QBT_URL} | tar -zxf - -C "${BASEPATH}" && \
    mv "${BASEPATH}/qBittorrent-release-${QBT_VERSION}" "${BASEPATH}/qBittorrent"
# https://github.com/qbittorrent/qBittorrent/issues/9333
RUN if [ "${QBT_VERSION}" = "4.1.2" ] ; then \
        patch "${BASEPATH}/qBittorrent/src/base/preferences.cpp" "${BASEPATH}/patches/implicit_cast_4.1.2.patch" ; \
    fi
RUN if [ "${QBT_VERSION}" = "4.1.6" ] ; then \
        patch "${BASEPATH}/qBittorrent/src/base/rss/rss_feed.cpp" "${BASEPATH}/patches/rss_assert_4.1.6.patch" ; \
    fi
WORKDIR "${BASEPATH}/qBittorrent"
ARG QBT_BUILD_TYPE="release"
RUN export libtorrent_CFLAGS="${BASEPATH}/libtorrent/build/include/" && \
    export libtorrent_LIBS="${BASEPATH}/libtorrent/build/lib/libtorrent-rasterbar.so" && \
    if [ ${QBT_BUILD_TYPE} = "debug" ]; then ENABLE_DEBUG="--enable-debug"; fi && \
    ./configure \
      CXXFLAGS="-std=c++14" \
      CFLAGS="-I${BASEPATH}/libtorrent/install/include/libtorrent" \
      LDFLAGS="-Wl,-rpath,${BASEPATH}/libtorrent/install/lib/" \
	  libtorrent_CFLAGS="${BASEPATH}/libtorrent/install/include/" \
      libtorrent_LIBS="${BASEPATH}/libtorrent/install/lib/libtorrent-rasterbar.so" \
      ${ENABLE_DEBUG} \
      --disable-gui && \
    make -j$(nproc) install


FROM ubuntu:22.10

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && \
    apt install --no-install-recommends -y \
      doas \
      python3 \
      qtbase5-dev \
      tini && \
    addgroup qbtUser --force-badname && \
    adduser \
      --quiet \
      --system \
      --disabled-password \
      --force-badname \
      --no-create-home \
      --shell /usr/sbin/nologin \
      -u 1000 \
      qbtUser && \
    echo "permit setenv { LD_LIBRARY_PATH=/build/libtorrent/install/ } nopass :root" >> "/etc/doas.conf"

COPY --from=builder /build/libtorrent/install/* /build/libtorrent/install/
COPY --from=builder /usr/local/bin/qbittorrent-nox /usr/bin/qbittorrent-nox

COPY assets/entrypoint.sh /entrypoint.sh

ENTRYPOINT ["/usr/bin/tini", "-g", "--", "/entrypoint.sh"]
